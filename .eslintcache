[{"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\index.js":"1","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\App.js":"2","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\store\\index.js":"3","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\index.js":"4","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\actionTypes.js":"5","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\posts.js":"6","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\PostsList.js":"7","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Navbar.js":"8","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Home.js":"9","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\index.js":"10","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Page404.js":"11","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Login.js":"12","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\helpers\\API_urls.js":"13","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\auth.js":"14","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\auth.js":"15","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\helpers\\utils.js":"16","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\SignUp.js":"17","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Signup.js":"18","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Settings.js":"19","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\UserProfile.js":"20","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\profile.js":"21","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\profile.js":"22","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\posts.js":"23","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\friends.js":"24","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\friends.js":"25","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\FriendsListItem.js":"26","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\FriendsList.js":"27","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\CreatePost.js":"28","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Post.js":"29","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Comment.js":"30","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\search.js":"31","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\search.js":"32","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Chat.js":"33","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\UserProfile1.js":"34"},{"size":442,"mtime":1611013312826,"results":"35","hashOfConfig":"36"},{"size":3833,"mtime":1629912045395,"results":"37","hashOfConfig":"36"},{"size":299,"mtime":1610924479782,"results":"38","hashOfConfig":"36"},{"size":736,"mtime":1611059012870,"results":"39","hashOfConfig":"36"},{"size":1142,"mtime":1611058378085,"results":"40","hashOfConfig":"36"},{"size":2752,"mtime":1611056924849,"results":"41","hashOfConfig":"36"},{"size":615,"mtime":1611025666523,"results":"42","hashOfConfig":"36"},{"size":3002,"mtime":1611059951866,"results":"43","hashOfConfig":"36"},{"size":418,"mtime":1629911998658,"results":"44","hashOfConfig":"36"},{"size":632,"mtime":1611062795941,"results":"45","hashOfConfig":"36"},{"size":164,"mtime":1610966603014,"results":"46","hashOfConfig":"36"},{"size":2891,"mtime":1611359114529,"results":"47","hashOfConfig":"36"},{"size":928,"mtime":1629901737725,"results":"48","hashOfConfig":"36"},{"size":1512,"mtime":1611007799776,"results":"49","hashOfConfig":"36"},{"size":3870,"mtime":1611007141448,"results":"50","hashOfConfig":"36"},{"size":405,"mtime":1610988897027,"results":"51","hashOfConfig":"36"},{"size":2726,"mtime":1610992523617,"results":"52","hashOfConfig":"36"},{"size":2751,"mtime":1611012584542,"results":"53","hashOfConfig":"36"},{"size":3490,"mtime":1611008178328,"results":"54","hashOfConfig":"36"},{"size":4468,"mtime":1611060686526,"results":"55","hashOfConfig":"36"},{"size":801,"mtime":1611094094143,"results":"56","hashOfConfig":"36"},{"size":1136,"mtime":1611011477341,"results":"57","hashOfConfig":"36"},{"size":1017,"mtime":1611055786303,"results":"58","hashOfConfig":"36"},{"size":941,"mtime":1611055705328,"results":"59","hashOfConfig":"36"},{"size":573,"mtime":1611021019065,"results":"60","hashOfConfig":"36"},{"size":505,"mtime":1611020621064,"results":"61","hashOfConfig":"36"},{"size":511,"mtime":1611017290811,"results":"62","hashOfConfig":"36"},{"size":884,"mtime":1611025165655,"results":"63","hashOfConfig":"36"},{"size":3527,"mtime":1629903452864,"results":"64","hashOfConfig":"36"},{"size":506,"mtime":1611026509664,"results":"65","hashOfConfig":"36"},{"size":390,"mtime":1611059144814,"results":"66","hashOfConfig":"36"},{"size":859,"mtime":1611058948695,"results":"67","hashOfConfig":"36"},{"size":2749,"mtime":1611067540174,"results":"68","hashOfConfig":"36"},{"size":4790,"mtime":1611097004305,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1xsgg0c",{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\index.js",[],["145","146"],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\App.js",["147","148","149"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Proptypes from \"prop-types\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { fetchPost } from \"../actions/posts\";\n\nimport { Navbar, Home, Page404, Login, Signup, Settings } from \"./\";\nimport { authenticateUser } from \"../actions/auth\";\nimport UserProfile from \"./UserProfile\";\nimport { fetchUserFriends } from \"../actions/friends\";\nimport UserProfile1 from \"./UserProfile1\";\n\n// const Settings = () => {\n//   return <div>Setting</div>;\n// };\n\nconst PrivateRoute = (PrivateRouteProps) => {\n  const { isLoggedIn, path, component: Component } = PrivateRouteProps;\n  // console.log(\"****isogin**** \", isLoggedIn);\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        console.log(props);\n        return isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          // <Redirect to=\"/login\" />\n          <Redirect\n            to={{\n              pathname: \"/login/\",\n              state: {\n                from: props.location, // from where it is coming // from: { pathname: \"prevPath\" }\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nclass App extends Component {\n  componentDidMount() {\n    console.log(\"******** falak ********\");\n    this.props.dispatch(fetchPost());\n\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      try {\n        const user = jwt_decode(token);\n        // console.log(\"***user*** \", user);\n        this.props.dispatch(\n          authenticateUser({\n            email: user.email,\n            _id: user._id,\n            name: user.name,\n          })\n        );\n        this.props.dispatch(fetchUserFriends());\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  render() {\n    const { posts, auth, friends } = this.props;\n    console.log(\"render app\", posts);\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          {/* <PostsList posts={posts} /> */}\n\n          {/* <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/signup\">Signup</Link>\n            </li>\n          </ul> */}\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => {\n                // use some logic\n                return (\n                  <Home\n                    {...props}\n                    posts={posts}\n                    friends={friends}\n                    isLogin={auth.isLogin}\n                  />\n                );\n              }}\n            />\n            {/* <Route exact path=\"/\" component={Home} /> */}\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <PrivateRoute\n              exact\n              path=\"/settings\"\n              component={Settings}\n              isLoggedIn={auth.isLogin}\n            />\n            <PrivateRoute\n              exact\n              path=\"/users/:userId\"\n              component={UserProfile1}\n              isLoggedIn={auth.isLogin}\n            />\n            {/* <PrivateRoute\n              exact\n              path=\"/users/:userId\"\n              component={UserProfile}\n              isLoggedIn={auth.isLogin}\n            /> */}\n\n            <Route component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n// App.propTypes = {\n//   posts: Proptypes.array.isRequired,\n// };\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n    friends: state.friends,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\store\\index.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\index.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\actionTypes.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\posts.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\PostsList.js",["150"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Proptypes from \"prop-types\";\r\nimport { CreatePost, Post } from \"./\";\r\n\r\nclass PostsList extends Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n    if (posts === undefined) {\r\n      return <div>hello</div>;\r\n    }\r\n    return (\r\n      <div className=\"posts-list\">\r\n        <CreatePost />\r\n        {posts.map((post) => (\r\n          <Post post={post} key={post._id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostsList.propTypes = {\r\n  posts: Proptypes.array.isRequired,\r\n};\r\n\r\nexport default PostsList;\r\n","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Navbar.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Home.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\index.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Page404.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Login.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\helpers\\API_urls.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\auth.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\auth.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\helpers\\utils.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\SignUp.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Signup.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Settings.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\UserProfile.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\profile.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\profile.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\posts.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\friends.js",["151"],"import { APIUrls } from \"../helpers/API_urls\";\nimport {\n  ADD_FRIEND,\n  FETCH_FRIEND_SUCCESS,\n  REMOVE_FRIEND,\n  UPDATE_POST_LIKE,\n} from \"./actionTypes\";\n\nexport function fetchUserFriends(userId) {\n  return (dispatch) => {\n    const url = APIUrls.userFriends(userId);\n    const token = localStorage.getItem(\"token\");\n    fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"data\", data);\n        dispatch(fetchFriendsSucces(data.data.friends));\n      });\n  };\n}\n\nexport function fetchFriendsSucces(friends) {\n  return {\n    type: FETCH_FRIEND_SUCCESS,\n    friends,\n  };\n}\n\nexport function addFriend(friend) {\n  return {\n    type: ADD_FRIEND,\n    friend,\n  };\n}\n\nexport function removeFriend(userId) {\n  return {\n    type: REMOVE_FRIEND,\n    userId,\n  };\n}\n","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\friends.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\FriendsListItem.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\FriendsList.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\CreatePost.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Post.js",["152"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Proptypes from \"prop-types\";\r\nimport { addLike, createComment } from \"../actions/posts\";\r\nimport { Comment } from \"./\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comment: \"\",\r\n    };\r\n  }\r\n\r\n  handleAddComment = (e) => {\r\n    const { comment } = this.state;\r\n    const { post } = this.props;\r\n\r\n    if (e.key === \"Enter\") {\r\n      this.props.dispatch(createComment(comment, post._id));\r\n\r\n      // clear comment\r\n      this.setState({\r\n        comment: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnCommentChange = (e) => {\r\n    this.setState({\r\n      comment: e.target.value,\r\n    });\r\n  };\r\n\r\n  likePostHandle = (e) => {\r\n    const { post, auth } = this.props;\r\n    this.props.dispatch(addLike(post._id, \"POST\", auth.user._id));\r\n  };\r\n\r\n  render() {\r\n    const { post, auth } = this.props;\r\n    const { comment } = this.state;\r\n    const isPostLikeByUser = post.likes.includes(auth.user._id);\r\n    return (\r\n      <div>\r\n        <div className=\"post-wrapper\" key={post._id}>\r\n          <div className=\"post-header\">\r\n            <div className=\"post-avatar\">\r\n              <Link to={`/users/${post.user._id}`}>\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                  alt=\"user-pic\"\r\n                />\r\n              </Link>\r\n              <div>\r\n                <span className=\"post-author\">{post.user.name}</span>\r\n                <span className=\"post-time\">a minute ago</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"post-content\">{post.content}</div>\r\n\r\n            <div className=\"post-actions\">\r\n              <button\r\n                className=\"post-like no-btn\"\r\n                onClick={this.likePostHandle}\r\n              >\r\n                {isPostLikeByUser ? (\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/1076/1076984.svg\"\r\n                    alt=\"like post\"\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n                    alt=\"likes-icon\"\r\n                  />\r\n                )}\r\n                <span>{post.likes.length}pp</span>\r\n              </button>\r\n\r\n              <div className=\"post-comments-icon\">\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\r\n                  alt=\"comments-icon\"\r\n                />\r\n                <span>{post.comments.length}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"post-comment-box\">\r\n              <input\r\n                placeholder=\"Start typing a comment\"\r\n                onChange={this.handleOnCommentChange}\r\n                onKeyPress={this.handleAddComment}\r\n                value={comment}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"post-comments-list\">\r\n              {post.comments.map((comment) => (\r\n                <Comment\r\n                  comment={comment}\r\n                  key={comment._id}\r\n                  postId={post._id}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n","C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Comment.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\reducers\\search.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\actions\\search.js",[],["153","154"],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\Chat.js",[],"C:\\Users\\borni\\Desktop\\nodews\\codialreact\\src\\components\\UserProfile1.js",["155","156","157","158"],"import React, { useEffect, useState } from \"react\";\r\nimport combineReducers from \"../reducers/index\";\r\nimport { addFriend, removeFriend } from \"../actions/friends\";\r\nimport { getUserProfile } from \"../actions/profile\";\r\nimport { APIUrls } from \"../helpers/API_urls\";\r\nimport { useSelector, useStore } from \"react-redux\";\r\n\r\nfunction UserProfile1(props) {\r\n  const initialState = {\r\n    success: null,\r\n    error: null,\r\n    successMessage: null,\r\n  };\r\n\r\n  const store = useStore(); /////   for dispatch\r\n\r\n  const profile = useSelector((state) => state.profile); //// like connect\r\n  const friends = useSelector((state) => state.friends); //// like connect\r\n\r\n  const [state, setStateHook] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    const { match } = props;\r\n    if (match.params.userId) {\r\n      // dispatch an action\r\n      store.dispatch(getUserProfile(match.params.userId));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const {\r\n      match: { params: currParams },\r\n    } = props;\r\n    if (currParams) {\r\n      store.dispatch(getUserProfile(currParams.userId));\r\n    }\r\n  }, [props]);\r\n\r\n  console.log(\"***********************************\");\r\n  console.log(store.getState());\r\n  console.log(profile);\r\n  console.log(friends);\r\n  console.log(\"***********************************\");\r\n\r\n  const checkFriend = () => {\r\n    const { match } = props;\r\n    const userId = match.params.userId;\r\n    const friendsId = friends.map((friend) => friend.to_user._id);\r\n    return friendsId.includes(userId);\r\n  };\r\n\r\n  const handleAddFriendClick = async () => {\r\n    const userId = props.match.params.userId;\r\n    const url = APIUrls.addFriend(userId);\r\n    const token = localStorage.getItem(\"token\");\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n    if (data.success) {\r\n      setStateHook((prevstate) => {\r\n        return {\r\n          success: true,\r\n          error: null,\r\n          successMessage: \"Add friend successfully!\",\r\n        };\r\n      });\r\n      store.dispatch(addFriend(data.data.friendship));\r\n    } else {\r\n      setStateHook((prevstate) => {\r\n        return {\r\n          ...prevstate,\r\n          success: null,\r\n          error: data.message,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRemoveFriendClick = async () => {\r\n    // Mini Assignment\r\n    const userId = props.match.params.userId;\r\n    const url = APIUrls.removeFriend(userId);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n    console.log(\"await data\", data);\r\n\r\n    if (data.success) {\r\n      // show user message\r\n      setStateHook((prevstate) => {\r\n        return {\r\n          success: true,\r\n          error: null,\r\n          successMessage: \"Remove friend successfully!\",\r\n        };\r\n      });\r\n      store.dispatch(removeFriend(userId));\r\n    } else {\r\n      setStateHook((prevstate) => {\r\n        return {\r\n          ...prevstate,\r\n          success: null,\r\n          error: data.message,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const {\r\n    match: { params },\r\n  } = props;\r\n  const user = profile.user;\r\n  const isFriend = checkFriend();\r\n  const { success, error, successMessage } = state;\r\n  if (profile.isProgress) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"img-container\">\r\n        <img\r\n          src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n          alt=\"user-dp\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"field\">\r\n        <div className=\"field-label\">Name</div>\r\n        <div className=\"field-value\">{user.name}</div>\r\n      </div>\r\n\r\n      <div className=\"field\">\r\n        <div className=\"field-label\">Email</div>\r\n        <div className=\"field-value\">{user.email}</div>\r\n      </div>\r\n\r\n      <div className=\"btn-grp\">\r\n        {!isFriend ? (\r\n          <button className=\"button save-btn\" onClick={handleAddFriendClick}>\r\n            Add Friend\r\n          </button>\r\n        ) : (\r\n          <button className=\"button save-btn\" onClick={handleRemoveFriendClick}>\r\n            Remove Friend\r\n          </button>\r\n        )}\r\n        {success && (\r\n          <div className=\"alert success-dailog\">{successMessage}</div>\r\n        )}\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile1;\r\n",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":17},{"ruleId":"163","severity":1,"message":"167","line":6,"column":3,"nodeType":"165","messageId":"166","endLine":6,"endColumn":7},{"ruleId":"163","severity":1,"message":"168","line":17,"column":8,"nodeType":"165","messageId":"166","endLine":17,"endColumn":19},{"ruleId":"163","severity":1,"message":"167","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":14},{"ruleId":"163","severity":1,"message":"169","line":6,"column":3,"nodeType":"165","messageId":"166","endLine":6,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":17},{"ruleId":"159","replacedBy":"170"},{"ruleId":"161","replacedBy":"171"},{"ruleId":"163","severity":1,"message":"172","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":28,"column":6,"nodeType":"175","endLine":28,"endColumn":8,"suggestions":"176"},{"ruleId":"173","severity":1,"message":"177","line":37,"column":6,"nodeType":"175","endLine":37,"endColumn":13,"suggestions":"178"},{"ruleId":"163","severity":1,"message":"179","line":125,"column":14,"nodeType":"165","messageId":"166","endLine":125,"endColumn":20},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'Proptypes' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'UserProfile' is defined but never used.","'UPDATE_POST_LIKE' is defined but never used.",["180"],["181"],"'combineReducers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'store'. Either include them or remove the dependency array.","ArrayExpression",["182"],"React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["183"],"'params' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},"Update the dependencies array to be: [props, store]",{"range":"187","text":"188"},{"range":"189","text":"188"},[904,906],"[props, store]",[1093,1100]]